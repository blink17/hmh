https://hero.handmade.network/episodes

======================= 2016.07.15 (금) 
Day 003 까지 복습했음. 004할 차례

======================= 2016.07.19 (화)
Day 005 - 27분경 까지 학습. 코딩은 다쳐놨기 때문에 동영상만 쭉 보면 될듯

======================= 2016.07.20 (수)
Day 005 - 약간의 디버깅 노하우, Unix less 쓰는방법을 익힘. 일단 005까지 마무리함

======================= 2016.07.21 (목)
Day 006 - XInput을 받는 방법, Dll 동적 로딩방법, 버추어 키보드 인풋 받기. 6일차 까지 마무리함. 일단 Q&A는 거르고 있음

======================= 2016.07.23 (토)
Day 009 - DSound로 사운드 출력하는 부분은 나의 주 관심사가 아니기 때문에 코드만 타이핑하고 넘어감.

======================= 2016.07.27 (수)
Day 010 - 퍼포먼스 측정법에 대해서 학습. 역시 Q&A는 건너뛰자 ㅋ

======================= 2017.03.16 (목)
// Note
cl 
/Zi : 디버깅 정보를 사용합니다.
/FC : 진단에 전체 경로 이름을 사용합니다.

devenv win32_handmade.exe
이렇게 하면 비주얼 스튜디오로 디버깅을 시작한다.
https://msdn.microsoft.com/ko-kr/library/aa291235(v=vs.71).aspx

/misc/shell.bat를 먼저 실행시켜야 작동함.

game_offscreen_buffer Buffer = {}; // 이렇게 초기화하면 스트럭쳐의 모든 값이 null로 채워진다.

// Day 011 완료

======================= 2017.03.20 (월)
// Note
game output sound 를 공통 코드로 빼는 작업 진행.

VirtualAlloc
https://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&l=KO-KR&k=k(MEMORYAPI%2FVirtualAlloc);k(VirtualAlloc);k(DevLang-C%2B%2B);k(TargetOS-Windows)&rd=true
http://3dmpengines.tistory.com/1408
버추어 어드레스 공간에서 할당되는 malloc은 "확정" 상태만 있다면 virtualAlloc은 "예약" 상태가 추가로 있는 메모리 할당 함수이다.
이 "예약"만 한 상태에서는 물리적 메모리가 전혀 소모되지 않고, 오직 "확정"일때만 실제로 할당된다.
=> 그러니깐 예약(Reserve)만 하고 확정(Commit)하지 않으면, 가상 메모리에서는 메모리를 할당하지만 실제 물려있는 물리적 메모리에는 할당하지 않는다.

// Day 012 완료

======================= 2017.03.21 (화)
// Day 013 코드 부분만 완성. 강의 들어야함.

======================= 2017.03.22 (수)
// Day 013 강의 생략. 컨트롤러 입력 부분이라 스킵함.
// Day 014 코드 부분만 완성. 강의 들어야함.

======================= 2017.03.28 (화)
// Day 014 강의 생략. 그냥 피곤함 ㅋ
// Day 015 완료


======================= 2017.03.29 (수)
// NOTE

[C/C++]
-Z7 일반 > 디버그 정보 형식 : 컴파일러에서 생성되는 디버깅 정보 형식을 지정한다. 이때 호환 가능한 링커 설정이 필요하다.
-W4 일반 > 경고 수준 : 컴파일러가 코드 오류를 처리하는 수준. 현재 4레벨
-WX 일반 > 경고를 오류로 처리
-Od 최적화 > 최적화 : 코드 최적화 사용 안함
-Oi 최적화 > 내장 함수 사용 : 내장 함수를 사용하면 더 빠르지만 더 큰 코드가 생성된다.
-Gm- 코드 생성 > 최소 다시 빌드 가능 : 변경된 C++ 클래스 정의(헤더(.h) 파일에 저장됨)를 포함하는 C++ 소스 파일을 다시 컴파일해야 하는지 여부를 결정하는 최소 다시 빌드를 사용한다. -> 아니요
-EHa- 코드 생성 > C++ 예외 처리 가능 : 컴파일러가 사용하는 예외 처리 모델을 지정. SEH 예외 있음.
-MT 코드 생성 > 런타임 라이브러리 : 다중 스레드
-GR- 언어 > 런타임 형식 정보 사용 : 런타임에 C++ 개체의 형식(런타임 형식 정보)를 검사하는 코드를 추가한다. -> 아니요
-wd4201 -wd4100 -wd4189 고급 > 특정 경고 사용안함
-FC 진단 메시지에 전체 경로를 사용


[링커]
-nologo 일반 > 시작 배너 표시 안 함 : 저작권 메시지와 버전 번호가 표시되지 않음.
-Fm 디버깅 > 맵 파일 생성, 맵 파일 이름 : 맵 파일을 만들도록 링커에 지시할 수 있다.
-subsystem:windows 시스템 > 하위 시스템 : 운영체제에서 .exe 파일을 실행하는 방법을 지시할 수 있다.
-opt:ref 최적화 > 참조 : 참조되지 않은 함수 및/또는 데이터가 제거

// Day 016 완료


======================= 2017.03.30 (목)
// Day 017 완료


======================= 2017.04.01 (토)
// Day 018 완료


======================= 2017.04.02 (일)
// Day 019 완료
// Day 020 완료
// Day 021 완료























